const videoEl = document.getElementById('video');
const canvasEl = document.getElementById('output');
const ctx = canvasEl.getContext('2d');

// 设置 canvas 尺寸
canvasEl.width = 360;
canvasEl.height = 480;

// 默认鞋子（111.png）
let shoeImg = new Image();
shoeImg.src = 'images/111.png';

// 切换鞋子
function changeShoe(path) {
  shoeImg.src = path;
}

// MediaPipe Pose 初始化
const pose = new Pose({
  locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose@0.5/${file}`
});

pose.setOptions({
  modelComplexity: 0,
  smoothLandmarks: true,
  minDetectionConfidence: 0.5,
  minTrackingConfidence: 0.5
});

pose.onResults(onResults);

// 启动摄像头
const camera = new Camera(videoEl, {
  onFrame: async () => {
    await pose.send({ image: videoEl });
  },
  width: 360,
  height: 480
});
camera.start();

function onResults(results) {
  ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);
  ctx.drawImage(results.image, 0, 0, canvasEl.width, canvasEl.height);

  if (!results.poseLandmarks) return;

  // 左脚踝（27）和左脚趾（31）
  const ankle = results.poseLandmarks[27];
  const toe = results.poseLandmarks[31];

  if (ankle && toe) {
    const x1 = ankle.x * canvasEl.width;
    const y1 = ankle.y * canvasEl.height;
    const x2 = toe.x * canvasEl.width;
    const y2 = toe.y * canvasEl.height;

    const footLength = Math.hypot(x2 - x1, y2 - y1);
    const angle = Math.atan2(y2 - y1, x2 - x1);

    const shoeWidth = footLength * 2;
    const shoeHeight = shoeWidth * (shoeImg.height / shoeImg.width);

    if (shoeImg.complete) {
      ctx.save();
      ctx.translate(x1, y1);
      ctx.rotate(angle);
      ctx.drawImage(shoeImg, -shoeWidth / 2, -shoeHeight / 2, shoeWidth, shoeHeight);
      ctx.restore();
    }
  }
}
